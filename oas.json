{
  "openapi": "3.1.0",
  "paths": {
    "/api/auth/login": {
      "post": {
        "deprecated": false,
        "operationId": "login_user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return record by the given identifier",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "Login User",
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/logout": {
      "post": {
        "deprecated": false,
        "operationId": "logout_user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return record by the given identifier",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "Logout user",
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/auth/register": {
      "post": {
        "deprecated": false,
        "operationId": "register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return record by the given identifier",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "register User",
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/organizations": {
      "post": {
        "deprecated": false,
        "operationId": "create_organization",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return record by the given identifier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrganizationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "Create a new Organization",
        "tags": [
          "Organizations"
        ]
      },
      "get": {
        "deprecated": false,
        "operationId": "list_organizations",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return list of records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organizations"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "List all Organizations",
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/organizations/{id}": {
      "get": {
        "deprecated": false,
        "operationId": "get_organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return record by the given identifier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organizations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "Get a single Organization by ID",
        "tags": [
          "Organizations"
        ]
      },
      "patch": {
        "deprecated": false,
        "operationId": "update_organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrganizationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Record updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateOrganizationDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "Update an Organization by ID",
        "tags": [
          "Organizations"
        ]
      },
      "delete": {
        "deprecated": false,
        "operationId": "delete_organization",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Organization ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "Delete an Organization by ID",
        "tags": [
          "Organizations"
        ]
      }
    },
    "/api/users": {
      "post": {
        "deprecated": false,
        "operationId": "create_user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return record by the given identifier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "Create a new User",
        "tags": [
          "users"
        ]
      },
      "get": {
        "deprecated": false,
        "operationId": "list_users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return list of records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "List all Users",
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "deprecated": false,
        "operationId": "get_user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return record by the given identifier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "Get a single User by ID",
        "tags": [
          "users"
        ]
      },
      "patch": {
        "deprecated": false,
        "operationId": "update_user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Record updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "Update an existing User",
        "tags": [
          "users"
        ]
      },
      "delete": {
        "deprecated": false,
        "operationId": "delete_user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "Delete a User by ID",
        "tags": [
          "users"
        ]
      }
    },
    "/api/pokemons": {
      "post": {
        "deprecated": false,
        "operationId": "create_pokemon",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePokemonDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return record by the given identifier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePokemonDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "Create a new Pokémon",
        "tags": [
          "Pokemon"
        ]
      },
      "get": {
        "deprecated": false,
        "operationId": "list_pokemons",
        "parameters": [
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "description": "Page size per page",
            "schema": {
              "example": 5,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return list of records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pokemons"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "List all Pokémon",
        "tags": [
          "Pokemon"
        ]
      }
    },
    "/api/pokemons/{id}/favoriteStatus": {
      "post": {
        "deprecated": false,
        "operationId": "update_favorite_status",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Pokémon ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "favoriteStatus",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "Update favorite status of pokemon",
        "tags": [
          "Pokemon"
        ]
      }
    },
    "/api/pokemons/{id}": {
      "get": {
        "deprecated": false,
        "operationId": "get_pokemon",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Pokémon ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return record by the given identifier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPokemonResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "Get a single Pokémon by ID",
        "tags": [
          "Pokemon"
        ]
      },
      "put": {
        "deprecated": false,
        "operationId": "update_pokemon",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Pokémon ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePokemonDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Record updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePokemonDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "Update a Pokémon by ID",
        "tags": [
          "Pokemon"
        ]
      },
      "delete": {
        "deprecated": false,
        "operationId": "delete_pokemon",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Pokémon ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalExceptionResponseApiModel"
                }
              }
            }
          }
        },
        "summary": "Delete a Pokémon by ID",
        "tags": [
          "Pokemon"
        ]
      }
    }
  },
  "info": {
    "title": "Pokemon API",
    "description": "Welcome to the Pokemon API",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "Localhost"
    }
  ],
  "components": {
    "schemas": {
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address of the User",
            "example": "ash.ketchum@example.com"
          },
          "password": {
            "type": "string",
            "description": "Password for the User",
            "example": "Str0ngP@ss!"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "GlobalExceptionResponseApiModel": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message or object",
            "example": [
              "string"
            ]
          },
          "timestamp": {
            "type": "string",
            "description": "ISO time of the response."
          },
          "path": {
            "type": "string",
            "description": "The requested API endpoint."
          }
        },
        "required": [
          "message",
          "timestamp",
          "path"
        ]
      },
      "RegisterDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the User",
            "example": "Ash Ketchum"
          },
          "email": {
            "type": "string",
            "description": "Email address of the User",
            "example": "ash.ketchum@example.com"
          },
          "password": {
            "type": "string",
            "description": "Password for the User",
            "example": "Str0ngP@ss!"
          },
          "organizationId": {
            "type": "string",
            "description": "Organization ID to which the User belongs",
            "example": "3f29ab3e-8f6a-4cbb-9f12-2d94ec5d5e3c"
          }
        },
        "required": [
          "name",
          "email",
          "password",
          "organizationId"
        ]
      },
      "CreateOrganizationDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Organization",
            "example": "Roob Inc"
          }
        }
      },
      "Organizations": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the Organization",
            "example": "2d202425-23a8-4d34-b8f0-0128320e1546"
          },
          "name": {
            "type": "string",
            "description": "Name of the Organization",
            "example": "Roob Inc"
          }
        },
        "required": [
          "id"
        ]
      },
      "UpdateOrganizationDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Organization",
            "example": "Roob Inc"
          }
        }
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the User",
            "example": "Ash Ketchum"
          },
          "email": {
            "type": "string",
            "description": "Email address of the User",
            "example": "ash.ketchum@example.com"
          },
          "password": {
            "type": "string",
            "description": "Password for the User",
            "example": "Str0ngP@ss!"
          },
          "organizationId": {
            "type": "string",
            "description": "Organization ID to which the User belongs",
            "example": "3f29ab3e-8f6a-4cbb-9f12-2d94ec5d5e3c"
          }
        },
        "required": [
          "name",
          "email",
          "password",
          "organizationId"
        ]
      },
      "Users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID of the User"
          },
          "name": {
            "type": "string",
            "description": "Name of the User",
            "example": "Ash Ketchum"
          },
          "email": {
            "type": "string",
            "description": "Email address of the User",
            "example": "ash@example.com"
          },
          "password": {
            "type": "string",
            "description": "Password for the User",
            "example": "P@ssw0rd!",
            "minLength": 6,
            "maxLength": 30
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the User",
            "example": "Ash Ketchum"
          },
          "email": {
            "type": "string",
            "description": "Email address of the User",
            "example": "ash@example.com"
          },
          "password": {
            "type": "string",
            "description": "Password for the User",
            "example": "P@ssw0rd!",
            "minLength": 6,
            "maxLength": 30
          }
        },
        "required": [
          "name"
        ]
      },
      "CreatePokemonDto": {
        "type": "object",
        "properties": {
          "originalId": {
            "type": "string",
            "description": "Image URL for pokemon",
            "example": "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/320.png"
          },
          "name": {
            "type": "string",
            "description": "Name of the Pokemon",
            "example": "dolliv"
          },
          "organizationId": {
            "type": "string",
            "description": "Organization Id associated with Pokemon",
            "example": "0017c9ae-1c79-4a54-93b4-2b9e8ab0d080"
          }
        }
      },
      "Pokemons": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the Pokemon",
            "example": "2d202425-23a8-4d34-b8f0-0128320e1546"
          },
          "name": {
            "type": "string",
            "description": "Name of the Pokemon",
            "example": "dolliv"
          },
          "originalId": {
            "type": "string",
            "description": "Image URL for pokemon",
            "example": "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/320.png"
          }
        },
        "required": [
          "id"
        ]
      },
      "GetPokemonResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the Pokemon",
            "example": "2d202425-23a8-4d34-b8f0-0128320e1546"
          },
          "name": {
            "type": "string",
            "description": "Name of the Pokemon",
            "example": "dolliv"
          },
          "imageUrl": {
            "type": "string",
            "description": "Image url of pokemon",
            "example": "http://"
          }
        },
        "required": [
          "id",
          "name",
          "imageUrl"
        ]
      },
      "UpdatePokemonDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Pokemon",
            "example": "dolliv"
          },
          "originalId": {
            "type": "string",
            "description": "Image URL for pokemon",
            "example": "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/320.png"
          },
          "organizationId": {
            "type": "string",
            "description": "Organization Id associated with Pokemon",
            "example": "0017c9ae-1c79-4a54-93b4-2b9e8ab0d080"
          }
        }
      }
    }
  }
}